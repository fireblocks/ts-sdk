/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.5
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {HttpClient} from '../utils/http-client';
import {Configuration, ConfigurationParameters} from '../utils/types/configuration';
import {ObjectSerializer} from "../model/models";
import { AxiosRequestConfig, AxiosResponse } from 'axios';


    export class AuditLogsApi {
        private  configuration: Configuration;
        private  httpClient: HttpClient;

        constructor(private configurationParameters:ConfigurationParameters = {}) {
            this.configuration = new Configuration(configurationParameters)
            this.httpClient = new HttpClient(this.configuration);
        }

            /**
            * 
                * @summary Get audit logs
                * @param timePeriod The last time period to fetch audit logs
            */
        public async auditsGet (timePeriod: 'DAY' | 'WEEK', ) : Promise<any> {
                const path = this.configuration.basePath + '/audits';
                let params: any = {};
                let headers: any = {}
                        // verify required parameter 'timePeriod' is not null or undefined
                        if (timePeriod === null || timePeriod === undefined) {
                        throw new Error('Required parameter timePeriod was null or undefined when calling auditsGet.');
                        }


                    if (typeof timePeriod === 'object') {
                        for( const [key,value] of Object.entries(timePeriod)){
                            params[key] = ObjectSerializer.serialize(value, typeof value);
                        }
                    } else {
                            params['timePeriod'] = ObjectSerializer.serialize(timePeriod, "'DAY' | 'WEEK'");
                    }
                    if (timePeriod !== undefined) {
                        params['timePeriod'] = ObjectSerializer.serialize(timePeriod, "'DAY' | 'WEEK'");
                    }

                let requestOptions: AxiosRequestConfig = {
                    method:'GET',
                    url: path,
                };
                return this.httpClient.request<any>(requestOptions);
        }
        }
