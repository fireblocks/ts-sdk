/* tslint:disable */
/* eslint-disable */
/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {AxiosInstance, AxiosPromise, AxiosRequestConfig} from 'axios';
import {Configuration} from "../configuration";
import {HttpClient} from "../utils/http-client";

// Some imports not used depending on template conditions
// @ts-ignore
import { assertParamExists, setSearchParams, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';

// @ts-ignore
import { TravelRuleGetAllVASPsResponse } from '../models';
// @ts-ignore
import { TravelRuleUpdateVASPDetails } from '../models';
// @ts-ignore
import { TravelRuleVASP } from '../models';
// @ts-ignore
import { TravelRuleValidateFullTransactionRequest } from '../models';
// @ts-ignore
import { TravelRuleValidateTransactionRequest } from '../models';
// @ts-ignore
import { TravelRuleValidateTransactionResponse } from '../models';



    /**
 * TravelRuleBetaApi - axios parameter creator
 * @export
 */
export const TravelRuleBetaApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get VASP Details.  Returns information about a VASP that has the specified DID.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Get VASP details
         * @param {string} did 
         * @param {string} [fields] CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getVASPByDID: async (did: string, fields?: string, ): Promise<AxiosRequestConfig> => {
            // verify required parameter 'did' is not null or undefined
            assertParamExists('getVASPByDID', 'did', did)
            const localVarPath = `/screening/travel_rule/vasp/{did}`
                .replace(`{${"did"}}`, encodeURIComponent(String(did)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(configuration.basePath + localVarPath);

            const localVarRequestOptions:AxiosRequestConfig = { method: 'GET'};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            localVarRequestOptions.headers = {...localVarHeaderParameter, };

            return {
                url: localVarUrlObj.toString(),
                ...localVarRequestOptions,
            };
        },
        /**
         * Get All VASPs.  Returns a list of VASPs. VASPs can be searched and sorted and results are paginated.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Get All VASPs
         * @param {string} [order] Field to order by
         * @param {number} [perPage] Records per page
         * @param {number} [page] Page number
         * @param {string} [fields] CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getVASPs: async (order?: string, perPage?: number, page?: number, fields?: string, ): Promise<AxiosRequestConfig> => {
            const localVarPath = `/screening/travel_rule/vasp`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(configuration.basePath + localVarPath);

            const localVarRequestOptions:AxiosRequestConfig = { method: 'GET'};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (order !== undefined) {
                localVarQueryParameter['order'] = order;
            }

            if (perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            localVarRequestOptions.headers = {...localVarHeaderParameter, };

            return {
                url: localVarUrlObj.toString(),
                ...localVarRequestOptions,
            };
        },
        /**
         * Update VASP Details.  Updates a VASP with the provided parameters. Use this endpoint to add your public jsonDIDkey generated by Notabene.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Add jsonDidKey to VASP details
         * @param {TravelRuleUpdateVASPDetails} travelRuleUpdateVASPDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        travelRuleApiControllerUpdateVasp: async (travelRuleUpdateVASPDetails: TravelRuleUpdateVASPDetails, ): Promise<AxiosRequestConfig> => {
            // verify required parameter 'travelRuleUpdateVASPDetails' is not null or undefined
            assertParamExists('travelRuleApiControllerUpdateVasp', 'travelRuleUpdateVASPDetails', travelRuleUpdateVASPDetails)
            const localVarPath = `/screeening/travel_rule/vasp/update`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(configuration.basePath + localVarPath);

            const localVarRequestOptions:AxiosRequestConfig = { method: 'PUT'};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            localVarRequestOptions.headers = {...localVarHeaderParameter, };
            localVarRequestOptions.data = travelRuleUpdateVASPDetails as any;

            return {
                url: localVarUrlObj.toString(),
                ...localVarRequestOptions,
            };
        },
        /**
         * Validate Full Travel Rule transactions.  Checks for all required information on the originator and beneficiary VASPs.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Validate Full Travel Rule Transaction
         * @param {TravelRuleValidateFullTransactionRequest} travelRuleValidateFullTransactionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validateFullTravelRuleTransaction: async (travelRuleValidateFullTransactionRequest: TravelRuleValidateFullTransactionRequest, ): Promise<AxiosRequestConfig> => {
            // verify required parameter 'travelRuleValidateFullTransactionRequest' is not null or undefined
            assertParamExists('validateFullTravelRuleTransaction', 'travelRuleValidateFullTransactionRequest', travelRuleValidateFullTransactionRequest)
            const localVarPath = `/screening/travel_rule/transaction/validate/full`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(configuration.basePath + localVarPath);

            const localVarRequestOptions:AxiosRequestConfig = { method: 'POST'};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            localVarRequestOptions.headers = {...localVarHeaderParameter, };
            localVarRequestOptions.data = travelRuleValidateFullTransactionRequest as any;

            return {
                url: localVarUrlObj.toString(),
                ...localVarRequestOptions,
            };
        },
        /**
         * Validate Travel Rule transactions.  Checks what beneficiary VASP details are required by your jurisdiction and the beneficiary\'s jurisdiction.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Validate Travel Rule Transaction
         * @param {TravelRuleValidateTransactionRequest} travelRuleValidateTransactionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validateTravelRuleTransaction: async (travelRuleValidateTransactionRequest: TravelRuleValidateTransactionRequest, ): Promise<AxiosRequestConfig> => {
            // verify required parameter 'travelRuleValidateTransactionRequest' is not null or undefined
            assertParamExists('validateTravelRuleTransaction', 'travelRuleValidateTransactionRequest', travelRuleValidateTransactionRequest)
            const localVarPath = `/screening/travel_rule/transaction/validate`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(configuration.basePath + localVarPath);

            const localVarRequestOptions:AxiosRequestConfig = { method: 'POST'};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            localVarRequestOptions.headers = {...localVarHeaderParameter, };
            localVarRequestOptions.data = travelRuleValidateTransactionRequest as any;

            return {
                url: localVarUrlObj.toString(),
                ...localVarRequestOptions,
            };
        },
    }
};

/**
 * TravelRuleBetaApi - functional programming interface
 * @export
 */
export const TravelRuleBetaApiFp = function(httpClient: HttpClient) {
    const localVarAxiosParamCreator = TravelRuleBetaApiAxiosParamCreator(httpClient.configuration)
    return {
        /**
         * Get VASP Details.  Returns information about a VASP that has the specified DID.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Get VASP details
         * @param {string} did 
         * @param {string} [fields] CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getVASPByDID(did: string, fields?: string, ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TravelRuleVASP>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getVASPByDID(did, fields, );
            return httpClient.request(localVarAxiosArgs);
        },
        /**
         * Get All VASPs.  Returns a list of VASPs. VASPs can be searched and sorted and results are paginated.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Get All VASPs
         * @param {string} [order] Field to order by
         * @param {number} [perPage] Records per page
         * @param {number} [page] Page number
         * @param {string} [fields] CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getVASPs(order?: string, perPage?: number, page?: number, fields?: string, ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TravelRuleGetAllVASPsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getVASPs(order, perPage, page, fields, );
            return httpClient.request(localVarAxiosArgs);
        },
        /**
         * Update VASP Details.  Updates a VASP with the provided parameters. Use this endpoint to add your public jsonDIDkey generated by Notabene.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Add jsonDidKey to VASP details
         * @param {TravelRuleUpdateVASPDetails} travelRuleUpdateVASPDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async travelRuleApiControllerUpdateVasp(travelRuleUpdateVASPDetails: TravelRuleUpdateVASPDetails, ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TravelRuleUpdateVASPDetails>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.travelRuleApiControllerUpdateVasp(travelRuleUpdateVASPDetails, );
            return httpClient.request(localVarAxiosArgs);
        },
        /**
         * Validate Full Travel Rule transactions.  Checks for all required information on the originator and beneficiary VASPs.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Validate Full Travel Rule Transaction
         * @param {TravelRuleValidateFullTransactionRequest} travelRuleValidateFullTransactionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async validateFullTravelRuleTransaction(travelRuleValidateFullTransactionRequest: TravelRuleValidateFullTransactionRequest, ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TravelRuleValidateTransactionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.validateFullTravelRuleTransaction(travelRuleValidateFullTransactionRequest, );
            return httpClient.request(localVarAxiosArgs);
        },
        /**
         * Validate Travel Rule transactions.  Checks what beneficiary VASP details are required by your jurisdiction and the beneficiary\'s jurisdiction.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
         * @summary Validate Travel Rule Transaction
         * @param {TravelRuleValidateTransactionRequest} travelRuleValidateTransactionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async validateTravelRuleTransaction(travelRuleValidateTransactionRequest: TravelRuleValidateTransactionRequest, ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TravelRuleValidateTransactionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.validateTravelRuleTransaction(travelRuleValidateTransactionRequest, );
            return httpClient.request(localVarAxiosArgs);
        },
    }
};

/**
 * Request parameters for getVASPByDID operation in TravelRuleBetaApi.
 * @export
 * @interface TravelRuleBetaApiGetVASPByDIDRequest
 */
export interface TravelRuleBetaApiGetVASPByDIDRequest {
    /**
     * 
     * @type {string}
     * @memberof TravelRuleBetaApiGetVASPByDID
     */
    readonly did: string

    /**
     * CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
     * @type {string}
     * @memberof TravelRuleBetaApiGetVASPByDID
     */
    readonly fields?: string
}

/**
 * Request parameters for getVASPs operation in TravelRuleBetaApi.
 * @export
 * @interface TravelRuleBetaApiGetVASPsRequest
 */
export interface TravelRuleBetaApiGetVASPsRequest {
    /**
     * Field to order by
     * @type {string}
     * @memberof TravelRuleBetaApiGetVASPs
     */
    readonly order?: string

    /**
     * Records per page
     * @type {number}
     * @memberof TravelRuleBetaApiGetVASPs
     */
    readonly perPage?: number

    /**
     * Page number
     * @type {number}
     * @memberof TravelRuleBetaApiGetVASPs
     */
    readonly page?: number

    /**
     * CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below)
     * @type {string}
     * @memberof TravelRuleBetaApiGetVASPs
     */
    readonly fields?: string
}

/**
 * Request parameters for travelRuleApiControllerUpdateVasp operation in TravelRuleBetaApi.
 * @export
 * @interface TravelRuleBetaApiTravelRuleApiControllerUpdateVaspRequest
 */
export interface TravelRuleBetaApiTravelRuleApiControllerUpdateVaspRequest {
    /**
     * 
     * @type {TravelRuleUpdateVASPDetails}
     * @memberof TravelRuleBetaApiTravelRuleApiControllerUpdateVasp
     */
    readonly travelRuleUpdateVASPDetails: TravelRuleUpdateVASPDetails
}

/**
 * Request parameters for validateFullTravelRuleTransaction operation in TravelRuleBetaApi.
 * @export
 * @interface TravelRuleBetaApiValidateFullTravelRuleTransactionRequest
 */
export interface TravelRuleBetaApiValidateFullTravelRuleTransactionRequest {
    /**
     * 
     * @type {TravelRuleValidateFullTransactionRequest}
     * @memberof TravelRuleBetaApiValidateFullTravelRuleTransaction
     */
    readonly travelRuleValidateFullTransactionRequest: TravelRuleValidateFullTransactionRequest
}

/**
 * Request parameters for validateTravelRuleTransaction operation in TravelRuleBetaApi.
 * @export
 * @interface TravelRuleBetaApiValidateTravelRuleTransactionRequest
 */
export interface TravelRuleBetaApiValidateTravelRuleTransactionRequest {
    /**
     * 
     * @type {TravelRuleValidateTransactionRequest}
     * @memberof TravelRuleBetaApiValidateTravelRuleTransaction
     */
    readonly travelRuleValidateTransactionRequest: TravelRuleValidateTransactionRequest
}

/**
 * TravelRuleBetaApi - object-oriented interface
 * @export
 * @class TravelRuleBetaApi
 * @extends {BaseAPI}
 */
export class TravelRuleBetaApi extends BaseAPI {
    /**
     * Get VASP Details.  Returns information about a VASP that has the specified DID.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
     * @summary Get VASP details
     * @param {TravelRuleBetaApiGetVASPByDIDRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TravelRuleBetaApi
     */
    public getVASPByDID(requestParameters: TravelRuleBetaApiGetVASPByDIDRequest, ) {
        return TravelRuleBetaApiFp(this.httpClient).getVASPByDID(requestParameters.did, requestParameters.fields, );
    }

    /**
     * Get All VASPs.  Returns a list of VASPs. VASPs can be searched and sorted and results are paginated.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
     * @summary Get All VASPs
     * @param {TravelRuleBetaApiGetVASPsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TravelRuleBetaApi
     */
    public getVASPs(requestParameters: TravelRuleBetaApiGetVASPsRequest = {}, ) {
        return TravelRuleBetaApiFp(this.httpClient).getVASPs(requestParameters.order, requestParameters.perPage, requestParameters.page, requestParameters.fields, );
    }

    /**
     * Update VASP Details.  Updates a VASP with the provided parameters. Use this endpoint to add your public jsonDIDkey generated by Notabene.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
     * @summary Add jsonDidKey to VASP details
     * @param {TravelRuleBetaApiTravelRuleApiControllerUpdateVaspRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TravelRuleBetaApi
     */
    public travelRuleApiControllerUpdateVasp(requestParameters: TravelRuleBetaApiTravelRuleApiControllerUpdateVaspRequest, ) {
        return TravelRuleBetaApiFp(this.httpClient).travelRuleApiControllerUpdateVasp(requestParameters.travelRuleUpdateVASPDetails, );
    }

    /**
     * Validate Full Travel Rule transactions.  Checks for all required information on the originator and beneficiary VASPs.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
     * @summary Validate Full Travel Rule Transaction
     * @param {TravelRuleBetaApiValidateFullTravelRuleTransactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TravelRuleBetaApi
     */
    public validateFullTravelRuleTransaction(requestParameters: TravelRuleBetaApiValidateFullTravelRuleTransactionRequest, ) {
        return TravelRuleBetaApiFp(this.httpClient).validateFullTravelRuleTransaction(requestParameters.travelRuleValidateFullTransactionRequest, );
    }

    /**
     * Validate Travel Rule transactions.  Checks what beneficiary VASP details are required by your jurisdiction and the beneficiary\'s jurisdiction.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren\'t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
     * @summary Validate Travel Rule Transaction
     * @param {TravelRuleBetaApiValidateTravelRuleTransactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TravelRuleBetaApi
     */
    public validateTravelRuleTransaction(requestParameters: TravelRuleBetaApiValidateTravelRuleTransactionRequest, ) {
        return TravelRuleBetaApiFp(this.httpClient).validateTravelRuleTransaction(requestParameters.travelRuleValidateTransactionRequest, );
    }
}
