/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5.5
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AmlScreeningResult } from './amlScreeningResult';
import { AmountInfo } from './amountInfo';
import { AuthorizationInfo } from './authorizationInfo';
import { BlockInfo } from './blockInfo';
import { FeeInfo } from './feeInfo';
import { NetworkRecord } from './networkRecord';
import { RewardInfo } from './rewardInfo';
import { SignedMessage } from './signedMessage';
import { TransactionOperation } from './transactionOperation';
import { TransactionResponseDestination } from './transactionResponseDestination';
import { TransactionResponseFeePayerInfo } from './transactionResponseFeePayerInfo';
import { TransactionSubStatus } from './transactionSubStatus';
import { TransferPeerPathResponse } from './transferPeerPathResponse';

export class TransactionResponse {
    'id'?: string;
    'assetId'?: string;
    'source'?: TransferPeerPathResponse;
    'destination'?: TransferPeerPathResponse;
    /**
    * The amount requested by the user
    */
    'requestedAmount'?: number;
    /**
    * If the transfer is a withdrawal from an exchange, the actual amount that was requested to be transferred. Otherwise, the requested amount
    */
    'amount'?: number;
    /**
    * The net amount of the transaction, after fee deduction
    */
    'netAmount'?: number;
    /**
    * The USD value of the requested amount
    */
    'amountUSD'?: number | null;
    /**
    * The total fee deducted by the exchange from the actual requested amount (serviceFee = amount - netAmount)
    */
    'serviceFee'?: number;
    /**
    * Deprecated - replaced by \"networkFee\"
    */
    'fee'?: number;
    /**
    * The fee paid to the network
    */
    'networkFee'?: number;
    /**
    * Unix timestamp
    */
    'createdAt'?: number;
    /**
    * Unix timestamp
    */
    'lastUpdated'?: number;
    'status'?: TransactionResponse.StatusEnum;
    'txHash'?: string;
    'tag'?: string;
    'subStatus'?: TransactionSubStatus;
    'destinationAddress'?: string;
    'sourceAddress'?: string;
    'destinationAddressDescription'?: string;
    'destinationTag'?: string;
    'signedBy'?: Array<string>;
    'createdBy'?: string;
    'rejectedBy'?: string;
    'addressType'?: string;
    'note'?: string;
    'exchangeTxId'?: string;
    'feeCurrency'?: string;
    'operation'?: TransactionOperation;
    'networkRecords'?: Array<NetworkRecord>;
    'amlScreeningResult'?: AmlScreeningResult;
    'customerRefId'?: string;
    'numOfConfirmations'?: number;
    'amountInfo'?: AmountInfo;
    'feeInfo'?: FeeInfo;
    'signedMessages'?: Array<SignedMessage>;
    'extraParameters'?: object;
    'externalTxId'?: string;
    'destinations'?: Array<TransactionResponseDestination>;
    'blockInfo'?: BlockInfo;
    'authorizationInfo'?: AuthorizationInfo;
    'index'?: number;
    'rewardInfo'?: RewardInfo;
    'feePayerInfo'?: TransactionResponseFeePayerInfo;
    'treatAsGrossAmount'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "assetId",
            "baseName": "assetId",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "TransferPeerPathResponse"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "TransferPeerPathResponse"
        },
        {
            "name": "requestedAmount",
            "baseName": "requestedAmount",
            "type": "number"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "netAmount",
            "baseName": "netAmount",
            "type": "number"
        },
        {
            "name": "amountUSD",
            "baseName": "amountUSD",
            "type": "number"
        },
        {
            "name": "serviceFee",
            "baseName": "serviceFee",
            "type": "number"
        },
        {
            "name": "fee",
            "baseName": "fee",
            "type": "number"
        },
        {
            "name": "networkFee",
            "baseName": "networkFee",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "number"
        },
        {
            "name": "lastUpdated",
            "baseName": "lastUpdated",
            "type": "number"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TransactionResponse.StatusEnum"
        },
        {
            "name": "txHash",
            "baseName": "txHash",
            "type": "string"
        },
        {
            "name": "tag",
            "baseName": "tag",
            "type": "string"
        },
        {
            "name": "subStatus",
            "baseName": "subStatus",
            "type": "TransactionSubStatus"
        },
        {
            "name": "destinationAddress",
            "baseName": "destinationAddress",
            "type": "string"
        },
        {
            "name": "sourceAddress",
            "baseName": "sourceAddress",
            "type": "string"
        },
        {
            "name": "destinationAddressDescription",
            "baseName": "destinationAddressDescription",
            "type": "string"
        },
        {
            "name": "destinationTag",
            "baseName": "destinationTag",
            "type": "string"
        },
        {
            "name": "signedBy",
            "baseName": "signedBy",
            "type": "Array<string>"
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string"
        },
        {
            "name": "rejectedBy",
            "baseName": "rejectedBy",
            "type": "string"
        },
        {
            "name": "addressType",
            "baseName": "addressType",
            "type": "string"
        },
        {
            "name": "note",
            "baseName": "note",
            "type": "string"
        },
        {
            "name": "exchangeTxId",
            "baseName": "exchangeTxId",
            "type": "string"
        },
        {
            "name": "feeCurrency",
            "baseName": "feeCurrency",
            "type": "string"
        },
        {
            "name": "operation",
            "baseName": "operation",
            "type": "TransactionOperation"
        },
        {
            "name": "networkRecords",
            "baseName": "networkRecords",
            "type": "Array<NetworkRecord>"
        },
        {
            "name": "amlScreeningResult",
            "baseName": "amlScreeningResult",
            "type": "AmlScreeningResult"
        },
        {
            "name": "customerRefId",
            "baseName": "customerRefId",
            "type": "string"
        },
        {
            "name": "numOfConfirmations",
            "baseName": "numOfConfirmations",
            "type": "number"
        },
        {
            "name": "amountInfo",
            "baseName": "amountInfo",
            "type": "AmountInfo"
        },
        {
            "name": "feeInfo",
            "baseName": "feeInfo",
            "type": "FeeInfo"
        },
        {
            "name": "signedMessages",
            "baseName": "signedMessages",
            "type": "Array<SignedMessage>"
        },
        {
            "name": "extraParameters",
            "baseName": "extraParameters",
            "type": "object"
        },
        {
            "name": "externalTxId",
            "baseName": "externalTxId",
            "type": "string"
        },
        {
            "name": "destinations",
            "baseName": "destinations",
            "type": "Array<TransactionResponseDestination>"
        },
        {
            "name": "blockInfo",
            "baseName": "blockInfo",
            "type": "BlockInfo"
        },
        {
            "name": "authorizationInfo",
            "baseName": "authorizationInfo",
            "type": "AuthorizationInfo"
        },
        {
            "name": "index",
            "baseName": "index",
            "type": "number"
        },
        {
            "name": "rewardInfo",
            "baseName": "rewardInfo",
            "type": "RewardInfo"
        },
        {
            "name": "feePayerInfo",
            "baseName": "feePayerInfo",
            "type": "TransactionResponseFeePayerInfo"
        },
        {
            "name": "treatAsGrossAmount",
            "baseName": "treatAsGrossAmount",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return TransactionResponse.attributeTypeMap;
    }
}

export namespace TransactionResponse {
    export enum StatusEnum {
        Submitted = <any> 'SUBMITTED',
        PendingSignature = <any> 'PENDING_SIGNATURE',
        PendingAuthorization = <any> 'PENDING_AUTHORIZATION',
        Completed = <any> 'COMPLETED',
        Confirming = <any> 'CONFIRMING',
        Failed = <any> 'FAILED',
        Rejected = <any> 'REJECTED',
        Cancelling = <any> 'CANCELLING',
        Cancelled = <any> 'CANCELLED',
        Broadcasting = <any> 'BROADCASTING',
        Blocked = <any> 'BLOCKED',
        Timeout = <any> 'TIMEOUT',
        Queued = <any> 'QUEUED',
        Pending3RdParty = <any> 'PENDING_3RD_PARTY',
        Pending3RdPartyManualApproval = <any> 'PENDING_3RD_PARTY_MANUAL_APPROVAL',
        PendingAmlScreening = <any> 'PENDING_AML_SCREENING',
        PartiallyCompleted = <any> 'PARTIALLY_COMPLETED'
    }
}
