/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class TravelRuleValidateTransactionResponse {
    /**
    * \"isValid\" will tell you if you have collected all the information needed for the travel rule data transfer. Once this field = \"true\", you can move on to the next step which is to transfer the front-end information to your back-end and perform Travel Rule Transaction create
    */
    'isValid': boolean;
    /**
    * \"type\" will tell you if the virtual asset value converted to FIAT value of the withdrawal request is above (=TRAVELRULE) or below (=BELOW_THRESHOLD) the threshold in your jurisdiction. If it is to an unhosted wallet which does not require travel rule information to  be sent and only collected, it will say NON_CUSTODIAL.
    */
    'type': string;
    /**
    * \"beneficiaryAddressType\" will tell you if your blockchain analytics provider or internal address book has been able to identify the wallet address.
    */
    'beneficiaryAddressType': string;
    /**
    * \"addressSource\" will tell you if the address was found in your internal address book or identified by the blockchain analytics provider.
    */
    'addressSource': string;
    /**
    * The VASP DID of the beneficiary VASP
    */
    'beneficiaryVASPdid': string;
    /**
    * \"beneficiaryVASPname\" will tell you the name of the VASP that has been identified as the owner of the wallet address. This name is used in a subsequent call to get its DID.
    */
    'beneficiaryVASPname': string;
    /**
    * \"errors/warnings\" will tell you what information about the beneficiary you need to collect from the sender.
    */
    'warnings': Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "isValid",
            "baseName": "isValid",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "beneficiaryAddressType",
            "baseName": "beneficiaryAddressType",
            "type": "string"
        },
        {
            "name": "addressSource",
            "baseName": "addressSource",
            "type": "string"
        },
        {
            "name": "beneficiaryVASPdid",
            "baseName": "beneficiaryVASPdid",
            "type": "string"
        },
        {
            "name": "beneficiaryVASPname",
            "baseName": "beneficiaryVASPname",
            "type": "string"
        },
        {
            "name": "warnings",
            "baseName": "warnings",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return TravelRuleValidateTransactionResponse.attributeTypeMap;
    }
}

