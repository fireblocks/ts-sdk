/* tslint:disable */
/* eslint-disable */
/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { RelatedTransactionDto } from './related-transaction-dto';
// May contain unused imports in some cases
// @ts-ignore
import { SolanaBlockchainDataDto } from './solana-blockchain-data-dto';

/**
 * 
 * @export
 * @interface DelegationDto
 */
export interface DelegationDto {
    /**
     * The unique identifier of the staking position
     * @type {string}
     * @memberof DelegationDto
     */
    'id': string;
    /**
     * The source vault account to stake from
     * @type {string}
     * @memberof DelegationDto
     */
    'vaultAccountId': string;
    /**
     * The destination validator address name
     * @type {string}
     * @memberof DelegationDto
     */
    'validatorName': string;
    /**
     * The destination validator provider name
     * @type {string}
     * @memberof DelegationDto
     */
    'providerName': string;
    /**
     * The protocol identifier (e.g. \"ETH\"/ \"SOL\") to use
     * @type {string}
     * @memberof DelegationDto
     */
    'chainDescriptor': string;
    /**
     * Amount of tokens to stake, measured in the staked asset unit.
     * @type {string}
     * @memberof DelegationDto
     */
    'amount': string;
    /**
     * The amount staked in the position, measured in the staked asset unit.
     * @type {string}
     * @memberof DelegationDto
     */
    'rewardsAmount': string;
    /**
     * When was the request made (ISO Date).
     * @type {string}
     * @memberof DelegationDto
     */
    'dateCreated': string;
    /**
     * The current status.
     * @type {string}
     * @memberof DelegationDto
     */
    'status': string;
    /**
     * An array of transaction objects related to this position. Each object includes a \'txId\' representing the transaction ID and a \'completed\' boolean indicating if the transaction was completed.
     * @type {Array<RelatedTransactionDto>}
     * @memberof DelegationDto
     */
    'relatedTransactions': Array<RelatedTransactionDto>;
    /**
     * The destination address of the staking transaction.
     * @type {string}
     * @memberof DelegationDto
     */
    'validatorAddress': string;
    /**
     * The unique identifier of the staking provider
     * @type {string}
     * @memberof DelegationDto
     */
    'providerId': string;
    /**
     * An array of available actions that can be performed. for example, actions like \"unstake\" or \"withdraw\".
     * @type {Array<string>}
     * @memberof DelegationDto
     */
    'availableActions': Array<string>;
    /**
     * Indicates whether there is an ongoing action for this position (true if ongoing, false if not).
     * @type {boolean}
     * @memberof DelegationDto
     */
    'inProgress': boolean;
    /**
     * Additional fields per blockchain - can be empty or missing if not initialized or no additional info exists. The type depends on the chainDescriptor value. For Solana (SOL), stake account address. For Ethereum (ETH), an empty object is returned as no specific data is available.
     * @type {SolanaBlockchainDataDto}
     * @memberof DelegationDto
     */
    'blockchainPositionInfo': SolanaBlockchainDataDto;
    /**
     * The transaction ID of the ongoing request
     * @type {string}
     * @memberof DelegationDto
     */
    'inProgressTxId'?: string;
}

