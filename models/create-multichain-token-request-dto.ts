/* tslint:disable */
/* eslint-disable */
/**
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { CreateMultichainTokenRequestDtoCreateParams } from './create-multichain-token-request-dto-create-params';

/**
 * 
 * @export
 * @interface CreateMultichainTokenRequestDto
 */
export interface CreateMultichainTokenRequestDto {
    /**
     * The id of the vault account that initiated the request to issue the token
     * @type {string}
     * @memberof CreateMultichainTokenRequestDto
     */
    'vaultAccountId': string;
    /**
     * 
     * @type {CreateMultichainTokenRequestDtoCreateParams}
     * @memberof CreateMultichainTokenRequestDto
     */
    'createParams': CreateMultichainTokenRequestDtoCreateParams;
    /**
     * The base asset identifiers of the blockchains (legacyId) to calculate deterministic addresses
     * @type {Array<string>}
     * @memberof CreateMultichainTokenRequestDto
     */
    'chains': Array<string>;
    /**
     * The salt to calculate the deterministic address. Must be a number between 0 and 2^256 -1, for it to fit in the bytes32 parameter.
     * @type {string}
     * @memberof CreateMultichainTokenRequestDto
     */
    'salt'?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMultichainTokenRequestDto
     */
    'displayName'?: string;
    /**
     * Indicates whether the token should be created in a gasless manner, utilizing the ERC-2771 standard. When set to true, the transaction will be relayed by a designated relayer. The workspace must be configured to use Fireblocks gasless relay.
     * @type {boolean}
     * @memberof CreateMultichainTokenRequestDto
     */
    'useGasless'?: boolean;
    /**
     * Max fee amount for the write function transaction. interchangeable with the \'feeLevel\' field
     * @type {string}
     * @memberof CreateMultichainTokenRequestDto
     */
    'fee'?: string;
    /**
     * Fee level for the write function transaction. interchangeable with the \'fee\' field
     * @type {string}
     * @memberof CreateMultichainTokenRequestDto
     */
    'feeLevel'?: CreateMultichainTokenRequestDtoFeeLevelEnum;
}

export const CreateMultichainTokenRequestDtoFeeLevelEnum = {
    Low: 'LOW',
    Medium: 'MEDIUM',
    High: 'HIGH'
} as const;

export type CreateMultichainTokenRequestDtoFeeLevelEnum = typeof CreateMultichainTokenRequestDtoFeeLevelEnum[keyof typeof CreateMultichainTokenRequestDtoFeeLevelEnum];


